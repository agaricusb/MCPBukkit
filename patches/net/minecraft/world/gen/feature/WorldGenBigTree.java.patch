--- ../net/minecraft/world/gen/feature/WorldGenBigTree.java
+++ ../net/minecraft/world/gen/feature/WorldGenBigTree.java
@@ -2,14 +2,17 @@
 
 import java.util.Random;
 import net.minecraft.block.Block;
+import net.minecraft.block.BlockSapling.TreeGenerator;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
 
-public class WorldGenBigTree extends WorldGenerator
+import org.bukkit.BlockChangeDelegate; // CraftBukkit
+
+public class WorldGenBigTree extends WorldGenerator implements TreeGenerator   // CraftBukkit add interface
 {
     static final byte[] field_76507_a = new byte[] {(byte)2, (byte)0, (byte)0, (byte)1, (byte)2, (byte)1};
     Random field_76505_b = new Random();
-    World field_76506_c;
+    BlockChangeDelegate field_76506_c; // CraftBukkit
     int[] field_76503_d = new int[] {0, 0, 0};
     int field_76504_e = 0;
     int field_76501_f;
@@ -137,7 +140,7 @@
                 else
                 {
                     aint1[b2] = aint[b2] + k1;
-                    int l1 = this.field_76506_c.func_72798_a(aint1[0], aint1[1], aint1[2]);
+                    int l1 = this.field_76506_c.getTypeId(aint1[0], aint1[1], aint1[2]);
 
                     if (l1 != 0 && l1 != Block.field_71952_K.field_71990_ca)
                     {
@@ -145,7 +148,7 @@
                     }
                     else
                     {
-                        this.func_76485_a(this.field_76506_c, aint1[0], aint1[1], aint1[2], p_76492_6_, 0);
+                        this.setTypeAndData(this.field_76506_c, aint1[0], aint1[1], aint1[2], p_76492_6_, 0);
                         ++k1;
                     }
                 }
@@ -257,7 +260,7 @@
                     }
                 }
 
-                this.func_76485_a(this.field_76506_c, aint3[0], aint3[1], aint3[2], p_76500_3_, b5);
+                this.setTypeAndData(this.field_76506_c, aint3[0], aint3[1], aint3[2], p_76500_3_, b5);
             }
         }
     }
@@ -369,9 +372,9 @@
                 aint3[b1] = p_76496_1_[b1] + i;
                 aint3[b2] = MathHelper.func_76128_c((double)p_76496_1_[b2] + (double)i * d0);
                 aint3[b3] = MathHelper.func_76128_c((double)p_76496_1_[b3] + (double)i * d1);
-                int k = this.field_76506_c.func_72798_a(aint3[0], aint3[1], aint3[2]);
-
-                if (k != 0 && k != Block.field_71952_K.field_71990_ca)
+                int k = this.field_76506_c.getTypeId(aint3[0], aint3[1], aint3[2]);
+
+                if ((k != 0 && k != Block.field_71952_K.field_71990_ca) || aint3[1] >= 256)   // CraftBukkit - fix trees wrapping around
                 {
                     break;
                 }
@@ -385,7 +388,7 @@
     {
         int[] aint = new int[] {this.field_76503_d[0], this.field_76503_d[1], this.field_76503_d[2]};
         int[] aint1 = new int[] {this.field_76503_d[0], this.field_76503_d[1] + this.field_76504_e - 1, this.field_76503_d[2]};
-        int i = this.field_76506_c.func_72798_a(this.field_76503_d[0], this.field_76503_d[1] - 1, this.field_76503_d[2]);
+        int i = this.field_76506_c.getTypeId(this.field_76503_d[0], this.field_76503_d[1] - 1, this.field_76503_d[2]);
 
         if (i != 2 && i != 3)
         {
@@ -426,6 +429,17 @@
 
     public boolean func_76484_a(World p_76484_1_, Random p_76484_2_, int p_76484_3_, int p_76484_4_, int p_76484_5_)
     {
+        // CraftBukkit start - moved to generate
+        // sk: The idea is to have (our) WorldServer implement
+        // BlockChangeDelegate and then we can implicitly cast World to
+        // WorldServer (a safe cast, AFAIK) and no code will be broken. This
+        // then allows plugins to catch manually-invoked generation events
+        return this.generate((BlockChangeDelegate) p_76484_1_, p_76484_2_, p_76484_3_, p_76484_4_, p_76484_5_);
+    }
+
+    public boolean generate(BlockChangeDelegate p_76484_1_, Random p_76484_2_, int p_76484_3_, int p_76484_4_, int p_76484_5_)
+    {
+        // CraftBukkit end
         this.field_76506_c = p_76484_1_;
         long l = p_76484_2_.nextLong();
         this.field_76505_b.setSeed(l);
