--- ../net/minecraft/network/NetServerHandler.java
+++ ../net/minecraft/network/NetServerHandler.java
@@ -6,21 +6,28 @@
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.Random;
+import java.util.concurrent.Callable;
+import net.minecraft.command.ICommandSender;
 import net.minecraft.crash.CrashReport;
 import net.minecraft.crash.CrashReportCategory;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.item.EntityItem;
+import net.minecraft.entity.item.EntityXPOrb;
+import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.entity.player.InventoryPlayer;
+import net.minecraft.entity.projectile.EntityArrow;
 import net.minecraft.inventory.Container;
 import net.minecraft.inventory.ContainerBeacon;
 import net.minecraft.inventory.ContainerMerchant;
 import net.minecraft.inventory.ContainerRepair;
+import net.minecraft.inventory.IInventory;
 import net.minecraft.inventory.Slot;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemEditableBook;
 import net.minecraft.item.ItemStack;
 import net.minecraft.item.ItemWritableBook;
+import net.minecraft.nbt.NBTBase;
 import net.minecraft.nbt.NBTTagString;
 import net.minecraft.network.packet.NetHandler;
 import net.minecraft.network.packet.Packet;
@@ -47,6 +54,7 @@
 import net.minecraft.network.packet.Packet255KickDisconnect;
 import net.minecraft.network.packet.Packet3Chat;
 import net.minecraft.network.packet.Packet53BlockChange;
+import net.minecraft.network.packet.Packet6SpawnPosition;
 import net.minecraft.network.packet.Packet7UseEntity;
 import net.minecraft.network.packet.Packet9Respawn;
 import net.minecraft.server.MinecraftServer;
@@ -58,9 +66,53 @@
 import net.minecraft.util.AxisAlignedBB;
 import net.minecraft.util.ChatAllowedCharacters;
 import net.minecraft.util.EnumChatFormatting;
+import net.minecraft.util.EnumMovingObjectType;
 import net.minecraft.util.IntHashMap;
+import net.minecraft.util.MathHelper;
+import net.minecraft.util.MovingObjectPosition;
 import net.minecraft.util.ReportedException;
+import net.minecraft.util.Vec3;
 import net.minecraft.world.WorldServer;
+
+// CraftBukkit start
+import java.io.UnsupportedEncodingException;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
+import java.util.logging.Level;
+import java.util.HashSet;
+
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.util.LazyPlayerSet;
+import org.bukkit.craftbukkit.util.Waitable;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.Player;
+import org.bukkit.event.Event;
+import org.bukkit.event.block.Action;
+import org.bukkit.event.block.SignChangeEvent;
+import org.bukkit.event.player.AsyncPlayerChatEvent;
+import org.bukkit.event.player.PlayerAnimationEvent;
+import org.bukkit.event.player.PlayerChatEvent;
+import org.bukkit.event.player.PlayerCommandPreprocessEvent;
+import org.bukkit.event.player.PlayerInteractEntityEvent;
+import org.bukkit.event.player.PlayerItemHeldEvent;
+import org.bukkit.event.player.PlayerKickEvent;
+import org.bukkit.event.player.PlayerMoveEvent;
+import org.bukkit.event.player.PlayerTeleportEvent;
+import org.bukkit.event.player.PlayerTeleportEvent.TeleportCause;
+import org.bukkit.event.player.PlayerToggleSneakEvent;
+import org.bukkit.event.player.PlayerToggleSprintEvent;
+import org.bukkit.event.inventory.*;
+import org.bukkit.event.inventory.InventoryType.SlotType;
+import org.bukkit.event.player.PlayerPortalEvent;
+import org.bukkit.event.player.PlayerToggleFlightEvent;
+import org.bukkit.inventory.CraftingInventory;
+import org.bukkit.inventory.InventoryView;
+// CraftBukkit end
 
 public class NetServerHandler extends NetHandler
 {
@@ -75,12 +127,13 @@
     private long field_72582_j;
     private static Random field_72583_k = new Random();
     private long field_72580_l;
-    private int field_72581_m = 0;
+    private volatile int field_72581_m = 0;
+    private static final AtomicIntegerFieldUpdater chatSpamField = AtomicIntegerFieldUpdater.newUpdater(NetServerHandler.class, "chatThrottle"); // CraftBukkit - multithreaded field
     private int field_72578_n = 0;
     private double field_72579_o;
     private double field_72589_p;
     private double field_72588_q;
-    private boolean field_72587_r = true;
+    public boolean field_72587_r = true; // CraftBukkit - private -> public
     private IntHashMap field_72586_s = new IntHashMap();
 
     public NetServerHandler(MinecraftServer p_i5010_1_, INetworkManager p_i5010_2_, EntityPlayerMP p_i5010_3_)
@@ -90,7 +143,36 @@
         p_i5010_2_.func_74425_a(this);
         this.field_72574_e = p_i5010_3_;
         p_i5010_3_.field_71135_a = this;
-    }
+        // CraftBukkit start
+        this.server = p_i5010_1_.server;
+    }
+
+    private final org.bukkit.craftbukkit.CraftServer server;
+    private int lastTick = MinecraftServer.currentTick;
+    private int lastDropTick = MinecraftServer.currentTick;
+    private int dropCount = 0;
+    private static final int PLACE_DISTANCE_SQUARED = 6 * 6;
+
+    // Get position of last block hit for BlockDamageLevel.STOPPED
+    private double lastPosX = Double.MAX_VALUE;
+    private double lastPosY = Double.MAX_VALUE;
+    private double lastPosZ = Double.MAX_VALUE;
+    private float lastPitch = Float.MAX_VALUE;
+    private float lastYaw = Float.MAX_VALUE;
+    private boolean justTeleported = false;
+
+    // For the packet15 hack :(
+    Long lastPacket;
+
+    // Store the last block right clicked and what type it was
+    private int lastMaterial;
+
+    public CraftPlayer getPlayer()
+    {
+        return (this.field_72574_e == null) ? null : (CraftPlayer) this.field_72574_e.getBukkitEntity();
+    }
+    private final static HashSet<Integer> invalidItems = new HashSet<Integer>(java.util.Arrays.asList(8, 9, 10, 11, 26, 34, 36, 43, 51, 52, 55, 59, 60, 62, 63, 64, 68, 71, 74, 75, 83, 90, 92, 93, 94, 95, 104, 105, 115, 117, 118, 119, 125, 127, 132, 137, 140, 141, 142, 144)); // TODO: Check after every update.
+    // CraftBukkit end
 
     public void func_72570_d()
     {
@@ -108,10 +190,15 @@
             this.func_72567_b(new Packet0KeepAlive(this.field_72585_i));
         }
 
-        if (this.field_72581_m > 0)
-        {
-            --this.field_72581_m;
-        }
+        // CraftBukkit start
+        for (int spam; (spam = this.field_72581_m) > 0 && !chatSpamField.compareAndSet(this, spam, spam - 1);) ;
+
+        /* Use thread-safe field access instead
+        if (this.m > 0) {
+            --this.m;
+        }
+        */
+        // CraftBukkit end
 
         if (this.field_72578_n > 0)
         {
@@ -126,11 +213,37 @@
     {
         if (!this.field_72576_c)
         {
+            // CraftBukkit start
+            String leaveMessage = EnumChatFormatting.YELLOW + this.field_72574_e.field_71092_bJ + " left the game.";
+            PlayerKickEvent event = new PlayerKickEvent(this.server.getPlayer(this.field_72574_e), p_72565_1_, leaveMessage);
+
+            if (this.server.getServer().func_71278_l())
+            {
+                this.server.getPluginManager().callEvent(event);
+            }
+
+            if (event.isCancelled())
+            {
+                // Do not kick the player
+                return;
+            }
+
+            // Send the possibly modified leave message
+            p_72565_1_ = event.getReason();
+            // CraftBukkit end
             this.field_72574_e.func_71123_m();
             this.func_72567_b(new Packet255KickDisconnect(p_72565_1_));
             this.field_72575_b.func_74423_d();
-            this.field_72573_d.func_71203_ab().func_72384_a(new Packet3Chat(EnumChatFormatting.YELLOW + this.field_72574_e.field_71092_bJ + " left the game."));
-            this.field_72573_d.func_71203_ab().func_72367_e(this.field_72574_e);
+            // CraftBukkit start
+            leaveMessage = event.getLeaveMessage();
+
+            if (leaveMessage != null && leaveMessage.length() > 0)
+            {
+                this.field_72573_d.func_71203_ab().func_72384_a(new Packet3Chat(leaveMessage));
+            }
+
+            // CraftBukkit end
+            this.field_72573_d.func_71203_ab().disconnect(this.field_72574_e);
             this.field_72576_c = true;
         }
     }
@@ -154,8 +267,81 @@
                 }
             }
 
-            if (this.field_72587_r)
-            {
+            // CraftBukkit start
+            Player player = this.getPlayer();
+            Location from = new Location(player.getWorld(), lastPosX, lastPosY, lastPosZ, lastYaw, lastPitch); // Get the Players previous Event location.
+            Location to = player.getLocation().clone(); // Start off the To location as the Players current location.
+
+            // If the packet contains movement information then we update the To location with the correct XYZ.
+            if (p_72498_1_.field_73546_h && !(p_72498_1_.field_73546_h && p_72498_1_.field_73543_b == -999.0D && p_72498_1_.field_73541_d == -999.0D))
+            {
+                to.setX(p_72498_1_.field_73545_a);
+                to.setY(p_72498_1_.field_73543_b);
+                to.setZ(p_72498_1_.field_73544_c);
+            }
+
+            // If the packet contains look information then we update the To location with the correct Yaw & Pitch.
+            if (p_72498_1_.field_73547_i)
+            {
+                to.setYaw(p_72498_1_.field_73542_e);
+                to.setPitch(p_72498_1_.field_73539_f);
+            }
+
+            // Prevent 40 event-calls for less than a single pixel of movement >.>
+            double delta = Math.pow(this.lastPosX - to.getX(), 2) + Math.pow(this.lastPosY - to.getY(), 2) + Math.pow(this.lastPosZ - to.getZ(), 2);
+            float deltaAngle = Math.abs(this.lastYaw - to.getYaw()) + Math.abs(this.lastPitch - to.getPitch());
+
+            if ((delta > 1f / 256 || deltaAngle > 10f) && (this.field_72587_r && !this.field_72574_e.field_70128_L))
+            {
+                this.lastPosX = to.getX();
+                this.lastPosY = to.getY();
+                this.lastPosZ = to.getZ();
+                this.lastYaw = to.getYaw();
+                this.lastPitch = to.getPitch();
+
+                // Skip the first time we do this
+                if (from.getX() != Double.MAX_VALUE)
+                {
+                    PlayerMoveEvent event = new PlayerMoveEvent(player, from, to);
+                    this.server.getPluginManager().callEvent(event);
+
+                    // If the event is cancelled we move the player back to their old location.
+                    if (event.isCancelled())
+                    {
+                        this.field_72574_e.field_71135_a.func_72567_b(new Packet13PlayerLookMove(from.getX(), from.getY() + 1.6200000047683716D, from.getY(), from.getZ(), from.getYaw(), from.getPitch(), false));
+                        return;
+                    }
+
+                    /* If a Plugin has changed the To destination then we teleport the Player
+                    there to avoid any 'Moved wrongly' or 'Moved too quickly' errors.
+                    We only do this if the Event was not cancelled. */
+                    if (!to.equals(event.getTo()) && !event.isCancelled())
+                    {
+                        this.field_72574_e.getBukkitEntity().teleport(event.getTo(), PlayerTeleportEvent.TeleportCause.UNKNOWN);
+                        return;
+                    }
+
+                    /* Check to see if the Players Location has some how changed during the call of the event.
+                    This can happen due to a plugin teleporting the player instead of using .setTo() */
+                    if (!from.equals(this.getPlayer().getLocation()) && this.justTeleported)
+                    {
+                        this.justTeleported = false;
+                        return;
+                    }
+                }
+            }
+
+            if (Double.isNaN(p_72498_1_.field_73545_a) || Double.isNaN(p_72498_1_.field_73543_b) || Double.isNaN(p_72498_1_.field_73544_c) || Double.isNaN(p_72498_1_.field_73541_d))
+            {
+                player.teleport(player.getWorld().getSpawnLocation(), PlayerTeleportEvent.TeleportCause.UNKNOWN);
+                System.err.println(player.getName() + " was caught trying to crash the server with an invalid position.");
+                player.kickPlayer("Nope!");
+                return;
+            }
+
+            if (this.field_72587_r && !this.field_72574_e.field_70128_L)
+            {
+                // CraftBukkit end
                 double d1;
                 double d2;
                 double d3;
@@ -255,7 +441,8 @@
 
                     if (Math.abs(p_72498_1_.field_73545_a) > 3.2E7D || Math.abs(p_72498_1_.field_73544_c) > 3.2E7D)
                     {
-                        this.func_72565_c("Illegal position");
+                        // CraftBukkit - teleport to previous position instead of kicking, players get stuck
+                        this.func_72569_a(this.field_72579_o, this.field_72589_p, this.field_72588_q, this.field_72574_e.field_70177_z, this.field_72574_e.field_70125_A);
                         return;
                     }
                 }
@@ -278,12 +465,14 @@
                 d4 = d1 - this.field_72574_e.field_70165_t;
                 double d6 = d2 - this.field_72574_e.field_70163_u;
                 double d7 = d3 - this.field_72574_e.field_70161_v;
-                double d8 = Math.min(Math.abs(d4), Math.abs(this.field_72574_e.field_70159_w));
-                double d9 = Math.min(Math.abs(d6), Math.abs(this.field_72574_e.field_70181_x));
-                double d10 = Math.min(Math.abs(d7), Math.abs(this.field_72574_e.field_70179_y));
+                // CraftBukkit start - min to max
+                double d8 = Math.max(Math.abs(d4), Math.abs(this.field_72574_e.field_70159_w));
+                double d9 = Math.max(Math.abs(d6), Math.abs(this.field_72574_e.field_70181_x));
+                double d10 = Math.max(Math.abs(d7), Math.abs(this.field_72574_e.field_70179_y));
+                // CraftBukkit end
                 double d11 = d8 * d8 + d9 * d9 + d10 * d10;
 
-                if (d11 > 100.0D && (!this.field_72573_d.func_71264_H() || !this.field_72573_d.func_71214_G().equals(this.field_72574_e.field_71092_bJ)))
+                if (d11 > 100.0D && this.field_72587_r && (!this.field_72573_d.func_71264_H() || !this.field_72573_d.func_71214_G().equals(this.field_72574_e.field_71092_bJ)))   // CraftBukkit - Added this.checkMovement condition to solve this check being triggered by teleports
                 {
                     this.field_72573_d.func_98033_al().func_98236_b(this.field_72574_e.field_71092_bJ + " moved too quickly! " + d4 + "," + d6 + "," + d7 + " (" + d8 + ", " + d9 + ", " + d10 + ")");
                     this.func_72569_a(this.field_72579_o, this.field_72589_p, this.field_72588_q, this.field_72574_e.field_70177_z, this.field_72574_e.field_70125_A);
@@ -331,7 +520,7 @@
 
                 AxisAlignedBB axisalignedbb = this.field_72574_e.field_70121_D.func_72329_c().func_72314_b((double)f4, (double)f4, (double)f4).func_72321_a(0.0D, -0.55D, 0.0D);
 
-                if (!this.field_72573_d.func_71231_X() && !this.field_72574_e.field_71134_c.func_73083_d() && !worldserver.func_72829_c(axisalignedbb))
+                if (!this.field_72573_d.func_71231_X() && !this.field_72574_e.field_71075_bZ.field_75101_c && !worldserver.func_72829_c(axisalignedbb))   // CraftBukkit - check abilities instead of creative mode
                 {
                     if (d12 >= -0.03125D)
                     {
@@ -352,6 +541,12 @@
 
                 this.field_72574_e.field_70122_E = p_72498_1_.field_73540_g;
                 this.field_72573_d.func_71203_ab().func_72358_d(this.field_72574_e);
+
+                if (this.field_72574_e.field_71134_c.func_73083_d())
+                {
+                    return;    // CraftBukkit - fixed fall distance accumulating while being in Creative mode.
+                }
+
                 this.field_72574_e.func_71122_b(this.field_72574_e.field_70163_u - d0, p_72498_1_.field_73540_g);
             }
         }
@@ -359,20 +554,85 @@
 
     public void func_72569_a(double p_72569_1_, double p_72569_3_, double p_72569_5_, float p_72569_7_, float p_72569_8_)
     {
+        // CraftBukkit start - Delegate to teleport(Location)
+        Player player = this.getPlayer();
+        Location from = player.getLocation();
+        Location to = new Location(this.getPlayer().getWorld(), p_72569_1_, p_72569_3_, p_72569_5_, p_72569_7_, p_72569_8_);
+        PlayerTeleportEvent event = new PlayerTeleportEvent(player, from, to, PlayerTeleportEvent.TeleportCause.UNKNOWN);
+        this.server.getPluginManager().callEvent(event);
+        from = event.getFrom();
+        to = event.isCancelled() ? from : event.getTo();
+        this.teleport(to);
+    }
+
+    public void teleport(Location dest)
+    {
+        double d0, d1, d2;
+        float f, f1;
+        d0 = dest.getX();
+        d1 = dest.getY();
+        d2 = dest.getZ();
+        f = dest.getYaw();
+        f1 = dest.getPitch();
+
+        // TODO: make sure this is the best way to address this.
+        if (Float.isNaN(f))
+        {
+            f = 0;
+        }
+
+        if (Float.isNaN(f1))
+        {
+            f1 = 0;
+        }
+
+        this.lastPosX = d0;
+        this.lastPosY = d1;
+        this.lastPosZ = d2;
+        this.lastYaw = f;
+        this.lastPitch = f1;
+        this.justTeleported = true;
+        // CraftBukkit end
         this.field_72587_r = false;
-        this.field_72579_o = p_72569_1_;
-        this.field_72589_p = p_72569_3_;
-        this.field_72588_q = p_72569_5_;
-        this.field_72574_e.func_70080_a(p_72569_1_, p_72569_3_, p_72569_5_, p_72569_7_, p_72569_8_);
-        this.field_72574_e.field_71135_a.func_72567_b(new Packet13PlayerLookMove(p_72569_1_, p_72569_3_ + 1.6200000047683716D, p_72569_3_, p_72569_5_, p_72569_7_, p_72569_8_, false));
+        this.field_72579_o = d0;
+        this.field_72589_p = d1;
+        this.field_72588_q = d2;
+        this.field_72574_e.func_70080_a(d0, d1, d2, f, f1);
+        this.field_72574_e.field_71135_a.func_72567_b(new Packet13PlayerLookMove(d0, d1 + 1.6200000047683716D, d1, d2, f, f1, false));
     }
 
     public void func_72510_a(Packet14BlockDig p_72510_1_)
     {
+        if (this.field_72574_e.field_70128_L)
+        {
+            return;    // CraftBukkit
+        }
+
         WorldServer worldserver = this.field_72573_d.func_71218_a(this.field_72574_e.field_71093_bK);
 
         if (p_72510_1_.field_73342_e == 4)
         {
+            // CraftBukkit start
+            // If the ticks aren't the same then the count starts from 0 and we update the lastDropTick.
+            if (this.lastDropTick != MinecraftServer.currentTick)
+            {
+                this.dropCount = 0;
+                this.lastDropTick = MinecraftServer.currentTick;
+            }
+            else
+            {
+                // Else we increment the drop count and check the amount.
+                this.dropCount++;
+
+                if (this.dropCount >= 20)
+                {
+                    this.field_72573_d.func_98033_al().func_98236_b(this.field_72574_e.field_71092_bJ + " dropped their items too quickly!");
+                    this.func_72565_c("You dropped your items too quickly (Hacking?)");
+                    return;
+                }
+            }
+
+            // CraftBukkit end
             this.field_72574_e.func_71040_bB(false);
         }
         else if (p_72510_1_.field_73342_e == 3)
@@ -426,13 +686,24 @@
 
             if (p_72510_1_.field_73342_e == 0)
             {
+                // CraftBukkit start
                 if (!this.field_72573_d.func_96290_a(worldserver, i, j, k, this.field_72574_e))
                 {
                     this.field_72574_e.field_71134_c.func_73074_a(i, j, k, p_72510_1_.field_73341_d);
                 }
                 else
                 {
+                    CraftEventFactory.callPlayerInteractEvent(this.field_72574_e, Action.LEFT_CLICK_BLOCK, i, j, k, p_72510_1_.field_73341_d, this.field_72574_e.field_71071_by.func_70448_g());
                     this.field_72574_e.field_71135_a.func_72567_b(new Packet53BlockChange(i, j, k, worldserver));
+                    // Update any tile entity data for this block
+                    TileEntity tileentity = worldserver.func_72796_p(i, j, k);
+
+                    if (tileentity != null)
+                    {
+                        this.field_72574_e.field_71135_a.func_72567_b(tileentity.func_70319_e());
+                    }
+
+                    // CraftBukkit end
                 }
             }
             else if (p_72510_1_.field_73342_e == 2)
@@ -459,6 +730,40 @@
     public void func_72472_a(Packet15Place p_72472_1_)
     {
         WorldServer worldserver = this.field_72573_d.func_71218_a(this.field_72574_e.field_71093_bK);
+
+        // CraftBukkit start
+        if (this.field_72574_e.field_70128_L)
+        {
+            return;
+        }
+
+        // This is a horrible hack needed because the client sends 2 packets on 'right mouse click'
+        // aimed at a block. We shouldn't need to get the second packet if the data is handled
+        // but we cannot know what the client will do, so we might still get it
+        //
+        // If the time between packets is small enough, and the 'signature' similar, we discard the
+        // second one. This sadly has to remain until Mojang makes their packets saner. :(
+        //  -- Grum
+
+        if (p_72472_1_.func_73401_h() == 255)
+        {
+            if (p_72472_1_.func_73405_i() != null && p_72472_1_.func_73405_i().field_77993_c == this.lastMaterial && this.lastPacket != null && p_72472_1_.field_73295_m - this.lastPacket < 100)
+            {
+                this.lastPacket = null;
+                return;
+            }
+        }
+        else
+        {
+            this.lastMaterial = p_72472_1_.func_73405_i() == null ? -1 : p_72472_1_.func_73405_i().field_77993_c;
+            this.lastPacket = p_72472_1_.field_73295_m;
+        }
+
+        // CraftBukkit - if rightclick decremented the item, always send the update packet.
+        // this is not here for CraftBukkit's own functionality; rather it is to fix
+        // a notch bug where the item doesn't update correctly.
+        boolean always = false;
+        // CraftBukkit end
         ItemStack itemstack = this.field_72574_e.field_71071_by.func_70448_g();
         boolean flag = false;
         int i = p_72472_1_.func_73403_d();
@@ -473,7 +778,20 @@
                 return;
             }
 
-            this.field_72574_e.field_71134_c.func_73085_a(this.field_72574_e, worldserver, itemstack);
+            // CraftBukkit start
+            int itemstackAmount = itemstack.field_77994_a;
+            org.bukkit.event.player.PlayerInteractEvent event = CraftEventFactory.callPlayerInteractEvent(this.field_72574_e, Action.RIGHT_CLICK_AIR, itemstack);
+
+            if (event.useItemInHand() != Event.Result.DENY)
+            {
+                this.field_72574_e.field_71134_c.func_73085_a(this.field_72574_e, this.field_72574_e.field_70170_p, itemstack);
+            }
+
+            // CraftBukkit - notch decrements the counter by 1 in the above method with food,
+            // snowballs and so forth, but he does it in a place that doesn't cause the
+            // inventory update packet to get sent
+            always = (itemstack.field_77994_a != itemstackAmount);
+            // CraftBukkit end
         }
         else if (p_72472_1_.func_73402_f() >= this.field_72573_d.func_71207_Z() - 1 && (p_72472_1_.func_73401_h() == 1 || p_72472_1_.func_73402_f() >= this.field_72573_d.func_71207_Z()))
         {
@@ -482,11 +800,16 @@
         }
         else
         {
-            if (this.field_72587_r && this.field_72574_e.func_70092_e((double)i + 0.5D, (double)j + 0.5D, (double)k + 0.5D) < 64.0D && !this.field_72573_d.func_96290_a(worldserver, i, j, k, this.field_72574_e))
-            {
-                this.field_72574_e.field_71134_c.func_73078_a(this.field_72574_e, worldserver, itemstack, i, j, k, l, p_72472_1_.func_73406_j(), p_72472_1_.func_73404_l(), p_72472_1_.func_73408_m());
-            }
-
+            // CraftBukkit start - Check if we can actually do something over this large a distance
+            Location eyeLoc = this.getPlayer().getEyeLocation();
+
+            if (Math.pow(eyeLoc.getX() - i, 2) + Math.pow(eyeLoc.getY() - j, 2) + Math.pow(eyeLoc.getZ() - k, 2) > PLACE_DISTANCE_SQUARED)
+            {
+                return;
+            }
+
+            this.field_72574_e.field_71134_c.func_73078_a(this.field_72574_e, worldserver, itemstack, i, j, k, l, p_72472_1_.func_73406_j(), p_72472_1_.func_73404_l(), p_72472_1_.func_73408_m());
+            // CraftBukkit end
             flag = true;
         }
 
@@ -539,11 +862,12 @@
         {
             this.field_72574_e.field_71137_h = true;
             this.field_72574_e.field_71071_by.field_70462_a[this.field_72574_e.field_71071_by.field_70461_c] = ItemStack.func_77944_b(this.field_72574_e.field_71071_by.field_70462_a[this.field_72574_e.field_71071_by.field_70461_c]);
-            Slot slot = this.field_72574_e.field_71070_bA.func_75147_a(this.field_72574_e.field_71071_by, this.field_72574_e.field_71071_by.field_70461_c);
+            Slot slot = this.field_72574_e.field_71070_bA.func_75147_a((IInventory) this.field_72574_e.field_71071_by, this.field_72574_e.field_71071_by.field_70461_c);
             this.field_72574_e.field_71070_bA.func_75142_b();
             this.field_72574_e.field_71137_h = false;
 
-            if (!ItemStack.func_77989_b(this.field_72574_e.field_71071_by.func_70448_g(), p_72472_1_.func_73405_i()))
+            // CraftBukkit - TODO CHECK IF NEEDED -- new if structure might not need 'always'. Kept it in for now, but may be able to remove in future
+            if (!ItemStack.func_77989_b(this.field_72574_e.field_71071_by.func_70448_g(), p_72472_1_.func_73405_i()) || always)
             {
                 this.func_72567_b(new Packet103SetSlot(this.field_72574_e.field_71070_bA.field_75152_c, slot.field_75222_d, this.field_72574_e.field_71071_by.func_70448_g()));
             }
@@ -552,9 +876,21 @@
 
     public void func_72515_a(String p_72515_1_, Object[] p_72515_2_)
     {
+        if (this.field_72576_c)
+        {
+            return;    // CraftBukkit - rarely it would send a disconnect line twice
+        }
+
         this.field_72573_d.func_98033_al().func_98233_a(this.field_72574_e.field_71092_bJ + " lost connection: " + p_72515_1_);
-        this.field_72573_d.func_71203_ab().func_72384_a(new Packet3Chat(EnumChatFormatting.YELLOW + this.field_72574_e.func_96090_ax() + " left the game."));
-        this.field_72573_d.func_71203_ab().func_72367_e(this.field_72574_e);
+        // CraftBukkit start - we need to handle custom quit messages
+        String quitMessage = this.field_72573_d.func_71203_ab().disconnect(this.field_72574_e);
+
+        if ((quitMessage != null) && (quitMessage.length() > 0))
+        {
+            this.field_72573_d.func_71203_ab().func_72384_a(new Packet3Chat(quitMessage));
+        }
+
+        // CraftBukkit end
         this.field_72576_c = true;
 
         if (this.field_72573_d.func_71264_H() && this.field_72574_e.field_71092_bJ.equals(this.field_72573_d.func_71214_G()))
@@ -566,6 +902,11 @@
 
     public void func_72509_a(Packet p_72509_1_)
     {
+        if (this.field_72576_c)
+        {
+            return;    // CraftBukkit
+        }
+
         this.field_72573_d.func_98033_al().func_98236_b(this.getClass() + " wasn\'t prepared to deal with a " + p_72509_1_.getClass());
         this.func_72565_c("Protocol error, unexpected packet");
     }
@@ -586,7 +927,31 @@
             {
                 return;
             }
-        }
+
+            // CraftBukkit start
+            String message = packet3chat.field_73476_b;
+
+            for (final String line : org.bukkit.craftbukkit.TextWrapper.wrapText(message))
+            {
+                this.field_72575_b.func_74429_a(new Packet3Chat(line));
+            }
+
+            return;
+            // CraftBukkit end
+        }
+
+        // CraftBukkit start
+        if (p_72567_1_ == null)
+        {
+            return;
+        }
+        else if (p_72567_1_ instanceof Packet6SpawnPosition)
+        {
+            Packet6SpawnPosition packet6 = (Packet6SpawnPosition) p_72567_1_;
+            this.field_72574_e.compassTarget = new Location(this.getPlayer().getWorld(), packet6.field_73300_a, packet6.field_73298_b, packet6.field_73299_c);
+        }
+
+        // CraftBukkit end
 
         try
         {
@@ -596,21 +961,31 @@
         {
             CrashReport crashreport = CrashReport.func_85055_a(throwable, "Sending packet");
             CrashReportCategory crashreportcategory = crashreport.func_85058_a("Packet being sent");
-            crashreportcategory.func_71500_a("Packet ID", new CallablePacketID(this, p_72567_1_));
-            crashreportcategory.func_71500_a("Packet class", new CallablePacketClass(this, p_72567_1_));
+            crashreportcategory.func_71500_a("Packet ID", (Callable)(new CallablePacketID(this, p_72567_1_)));
+            crashreportcategory.func_71500_a("Packet class", (Callable)(new CallablePacketClass(this, p_72567_1_)));
             throw new ReportedException(crashreport);
         }
     }
 
     public void func_72502_a(Packet16BlockItemSwitch p_72502_1_)
     {
+        // CraftBukkit start
+        if (this.field_72574_e.field_70128_L)
+        {
+            return;
+        }
+
         if (p_72502_1_.field_73386_a >= 0 && p_72502_1_.field_73386_a < InventoryPlayer.func_70451_h())
         {
+            PlayerItemHeldEvent event = new PlayerItemHeldEvent(this.getPlayer(), this.field_72574_e.field_71071_by.field_70461_c, p_72502_1_.field_73386_a);
+            this.server.getPluginManager().callEvent(event);
+            // CraftBukkit end
             this.field_72574_e.field_71071_by.field_70461_c = p_72502_1_.field_73386_a;
         }
         else
         {
             this.field_72573_d.func_98033_al().func_98236_b(this.field_72574_e.field_71092_bJ + " tried to set an invalid carried item");
+            this.func_72565_c("Nope!"); // CraftBukkit
         }
     }
 
@@ -626,7 +1001,39 @@
 
             if (s.length() > 100)
             {
-                this.func_72565_c("Chat message too long");
+                // CraftBukkit start
+                if (p_72481_1_.func_73277_a_())
+                {
+                    Waitable waitable = new Waitable()
+                    {
+                        @Override
+                        protected Object evaluate()
+                        {
+                            NetServerHandler.this.func_72565_c("Chat message too long");
+                            return null;
+                        }
+                    };
+                    this.field_72573_d.processQueue.add(waitable);
+
+                    try
+                    {
+                        waitable.get();
+                    }
+                    catch (InterruptedException e)
+                    {
+                        Thread.currentThread().interrupt();
+                    }
+                    catch (ExecutionException e)
+                    {
+                        throw new RuntimeException(e);
+                    }
+                }
+                else
+                {
+                    this.func_72565_c("Chat message too long");
+                }
+
+                // CraftBukkit end
             }
             else
             {
@@ -636,53 +1043,325 @@
                 {
                     if (!ChatAllowedCharacters.func_71566_a(s.charAt(i)))
                     {
-                        this.func_72565_c("Illegal characters in chat");
+                        // CraftBukkit start
+                        if (p_72481_1_.func_73277_a_())
+                        {
+                            Waitable waitable = new Waitable()
+                            {
+                                @Override
+                                protected Object evaluate()
+                                {
+                                    NetServerHandler.this.func_72565_c("Illegal characters in chat");
+                                    return null;
+                                }
+                            };
+                            this.field_72573_d.processQueue.add(waitable);
+
+                            try
+                            {
+                                waitable.get();
+                            }
+                            catch (InterruptedException e)
+                            {
+                                Thread.currentThread().interrupt();
+                            }
+                            catch (ExecutionException e)
+                            {
+                                throw new RuntimeException(e);
+                            }
+                        }
+                        else
+                        {
+                            this.func_72565_c("Illegal characters in chat");
+                        }
+
+                        // CraftBukkit end
                         return;
                     }
                 }
 
-                if (s.startsWith("/"))
-                {
-                    this.func_72566_d(s);
+                // CraftBukkit start
+                if (this.field_72574_e.func_71126_v() == 1 && !s.startsWith("/"))
+                {
+                    this.func_72567_b(new Packet3Chat("Cannot send chat message."));
+                    return;
+                }
+
+                this.chat(s, p_72481_1_.func_73277_a_());
+
+                // This section stays because it is only applicable to packets
+                if (chatSpamField.addAndGet(this, 20) > 200 && !this.field_72573_d.func_71203_ab().func_72353_e(this.field_72574_e.field_71092_bJ))   // CraftBukkit use thread-safe spam
+                {
+                    // CraftBukkit start
+                    if (p_72481_1_.func_73277_a_())
+                    {
+                        Waitable waitable = new Waitable()
+                        {
+                            @Override
+                            protected Object evaluate()
+                            {
+                                NetServerHandler.this.func_72565_c("disconnect.spam");
+                                return null;
+                            }
+                        };
+                        this.field_72573_d.processQueue.add(waitable);
+
+                        try
+                        {
+                            waitable.get();
+                        }
+                        catch (InterruptedException e)
+                        {
+                            Thread.currentThread().interrupt();
+                        }
+                        catch (ExecutionException e)
+                        {
+                            throw new RuntimeException(e);
+                        }
+                    }
+                    else
+                    {
+                        this.func_72565_c("disconnect.spam");
+                    }
+
+                    // CraftBukkit end
+                }
+            }
+        }
+    }
+
+    public void chat(String s, boolean async)
+    {
+        if (!this.field_72574_e.field_70128_L)
+        {
+            if (s.length() == 0)
+            {
+                this.field_72573_d.func_98033_al().func_98236_b(this.field_72574_e.field_71092_bJ + " tried to send an empty message");
+                return;
+            }
+
+            if (getPlayer().isConversing())
+            {
+                getPlayer().acceptConversationInput(s);
+                return;
+            }
+
+            if (s.startsWith("/"))
+            {
+                this.func_72566_d(s);
+                return;
+            }
+            else
+            {
+                Player player = this.getPlayer();
+                AsyncPlayerChatEvent event = new AsyncPlayerChatEvent(async, player, s, new LazyPlayerSet());
+                this.server.getPluginManager().callEvent(event);
+
+                if (PlayerChatEvent.getHandlerList().getRegisteredListeners().length != 0)
+                {
+                    // Evil plugins still listening to deprecated event
+                    final PlayerChatEvent queueEvent = new PlayerChatEvent(player, event.getMessage(), event.getFormat(), event.getRecipients());
+                    queueEvent.setCancelled(event.isCancelled());
+                    Waitable waitable = new Waitable()
+                    {
+                        @Override
+                        protected Object evaluate()
+                        {
+                            Bukkit.getPluginManager().callEvent(queueEvent);
+
+                            if (queueEvent.isCancelled())
+                            {
+                                return null;
+                            }
+
+                            String message = String.format(queueEvent.getFormat(), queueEvent.getPlayer().getDisplayName(), queueEvent.getMessage());
+                            NetServerHandler.this.field_72573_d.console.sendMessage(message);
+
+                            if (((LazyPlayerSet) queueEvent.getRecipients()).isLazy())
+                            {
+                                for (Object player : NetServerHandler.this.field_72573_d.func_71203_ab().field_72404_b)
+                                {
+                                    ((EntityPlayerMP) player).func_70006_a(message);
+                                }
+                            }
+                            else
+                            {
+                                for (Player player : queueEvent.getRecipients())
+                                {
+                                    player.sendMessage(message);
+                                }
+                            }
+
+                            return null;
+                        }
+                    };
+
+                    if (async)
+                    {
+                        field_72573_d.processQueue.add(waitable);
+                    }
+                    else
+                    {
+                        waitable.run();
+                    }
+
+                    try
+                    {
+                        waitable.get();
+                    }
+                    catch (InterruptedException e)
+                    {
+                        Thread.currentThread().interrupt(); // This is proper habit for java. If we aren't handling it, pass it on!
+                    }
+                    catch (ExecutionException e)
+                    {
+                        throw new RuntimeException("Exception processing chat event", e.getCause());
+                    }
                 }
                 else
                 {
-                    if (this.field_72574_e.func_71126_v() == 1)
-                    {
-                        this.func_72567_b(new Packet3Chat("Cannot send chat message."));
+                    if (event.isCancelled())
+                    {
                         return;
                     }
 
-                    s = "<" + this.field_72574_e.func_96090_ax() + "> " + s;
-                    this.field_72573_d.func_98033_al().func_98233_a(s);
-                    this.field_72573_d.func_71203_ab().func_72384_a(new Packet3Chat(s, false));
-                }
-
-                this.field_72581_m += 20;
-
-                if (this.field_72581_m > 200 && !this.field_72573_d.func_71203_ab().func_72353_e(this.field_72574_e.field_71092_bJ))
-                {
-                    this.func_72565_c("disconnect.spam");
-                }
-            }
-        }
-    }
+                    s = String.format(event.getFormat(), event.getPlayer().getDisplayName(), event.getMessage());
+                    field_72573_d.console.sendMessage(s);
+
+                    if (((LazyPlayerSet) event.getRecipients()).isLazy())
+                    {
+                        for (Object recipient : field_72573_d.func_71203_ab().field_72404_b)
+                        {
+                            ((EntityPlayerMP) recipient).func_70006_a(s);
+                        }
+                    }
+                    else
+                    {
+                        for (Player recipient : event.getRecipients())
+                        {
+                            recipient.sendMessage(s);
+                        }
+                    }
+                }
+            }
+        }
+
+        return;
+    }
+    // CraftBukkit end
 
     private void func_72566_d(String p_72566_1_)
     {
-        this.field_72573_d.func_71187_D().func_71556_a(this.field_72574_e, p_72566_1_);
+        // CraftBukkit start
+        CraftPlayer player = this.getPlayer();
+        PlayerCommandPreprocessEvent event = new PlayerCommandPreprocessEvent(player, p_72566_1_, new LazyPlayerSet());
+        this.server.getPluginManager().callEvent(event);
+
+        if (event.isCancelled())
+        {
+            return;
+        }
+
+        try
+        {
+            this.field_72573_d.func_98033_al().func_98233_a(event.getPlayer().getName() + " issued server command: " + event.getMessage()); // CraftBukkit
+
+            if (this.server.dispatchCommand(event.getPlayer(), event.getMessage().substring(1)))
+            {
+                return;
+            }
+        }
+        catch (org.bukkit.command.CommandException ex)
+        {
+            player.sendMessage(org.bukkit.ChatColor.RED + "An internal error occurred while attempting to perform this command");
+            java.util.logging.Logger.getLogger(NetServerHandler.class.getName()).log(Level.SEVERE, null, ex);
+            return;
+        }
+
+        // CraftBukkit end
+        /* CraftBukkit start - No longer needed as we have already handled it in server.dispatchServerCommand above.
+        this.minecraftServer.getCommandHandler().a(this.player, s);
+        // CraftBukkit end */
     }
 
     public void func_72524_a(Packet18Animation p_72524_1_)
     {
+        if (this.field_72574_e.field_70128_L)
+        {
+            return;    // CraftBukkit
+        }
+
         if (p_72524_1_.field_73469_b == 1)
         {
+            // CraftBukkit start - raytrace to look for 'rogue armswings'
+            float f = 1.0F;
+            float f1 = this.field_72574_e.field_70127_C + (this.field_72574_e.field_70125_A - this.field_72574_e.field_70127_C) * f;
+            float f2 = this.field_72574_e.field_70126_B + (this.field_72574_e.field_70177_z - this.field_72574_e.field_70126_B) * f;
+            double d0 = this.field_72574_e.field_70169_q + (this.field_72574_e.field_70165_t - this.field_72574_e.field_70169_q) * (double) f;
+            double d1 = this.field_72574_e.field_70167_r + (this.field_72574_e.field_70163_u - this.field_72574_e.field_70167_r) * (double) f + 1.62D - (double) this.field_72574_e.field_70129_M;
+            double d2 = this.field_72574_e.field_70166_s + (this.field_72574_e.field_70161_v - this.field_72574_e.field_70166_s) * (double) f;
+            Vec3 vec3 = this.field_72574_e.field_70170_p.func_82732_R().func_72345_a(d0, d1, d2);
+            float f3 = MathHelper.func_76134_b(-f2 * 0.017453292F - (float)Math.PI);
+            float f4 = MathHelper.func_76126_a(-f2 * 0.017453292F - (float)Math.PI);
+            float f5 = -MathHelper.func_76134_b(-f1 * 0.017453292F);
+            float f6 = MathHelper.func_76126_a(-f1 * 0.017453292F);
+            float f7 = f4 * f5;
+            float f8 = f3 * f5;
+            double d3 = 5.0D;
+            Vec3 vec31 = vec3.func_72441_c((double) f7 * d3, (double) f6 * d3, (double) f8 * d3);
+            MovingObjectPosition movingobjectposition = this.field_72574_e.field_70170_p.func_72901_a(vec3, vec31, true);
+
+            if (movingobjectposition == null || movingobjectposition.field_72313_a != EnumMovingObjectType.TILE)
+            {
+                CraftEventFactory.callPlayerInteractEvent(this.field_72574_e, Action.LEFT_CLICK_AIR, this.field_72574_e.field_71071_by.func_70448_g());
+            }
+
+            // Arm swing animation
+            PlayerAnimationEvent event = new PlayerAnimationEvent(this.getPlayer());
+            this.server.getPluginManager().callEvent(event);
+
+            if (event.isCancelled())
+            {
+                return;
+            }
+
+            // CraftBukkit end
             this.field_72574_e.func_71038_i();
         }
     }
 
     public void func_72473_a(Packet19EntityAction p_72473_1_)
     {
+        // CraftBukkit start
+        if (this.field_72574_e.field_70128_L)
+        {
+            return;
+        }
+
+        if (p_72473_1_.field_73366_b == 1 || p_72473_1_.field_73366_b == 2)
+        {
+            PlayerToggleSneakEvent event = new PlayerToggleSneakEvent(this.getPlayer(), p_72473_1_.field_73366_b == 1);
+            this.server.getPluginManager().callEvent(event);
+
+            if (event.isCancelled())
+            {
+                return;
+            }
+        }
+
+        if (p_72473_1_.field_73366_b == 4 || p_72473_1_.field_73366_b == 5)
+        {
+            PlayerToggleSprintEvent event = new PlayerToggleSprintEvent(this.getPlayer(), p_72473_1_.field_73366_b == 4);
+            this.server.getPluginManager().callEvent(event);
+
+            if (event.isCancelled())
+            {
+                return;
+            }
+        }
+
+        // CraftBukkit end
+
         if (p_72473_1_.field_73366_b == 1)
         {
             this.field_72574_e.func_70095_a(true);
@@ -702,7 +1381,7 @@
         else if (p_72473_1_.field_73366_b == 3)
         {
             this.field_72574_e.func_70999_a(false, true, true);
-            this.field_72587_r = false;
+            // this.checkMovement = false; // CraftBukkit - this is handled in teleport
         }
     }
 
@@ -718,6 +1397,11 @@
 
     public void func_72507_a(Packet7UseEntity p_72507_1_)
     {
+        if (this.field_72574_e.field_70128_L)
+        {
+            return;    // CraftBukkit
+        }
+
         WorldServer worldserver = this.field_72573_d.func_71218_a(this.field_72574_e.field_71093_bK);
         Entity entity = worldserver.func_73045_a(p_72507_1_.field_73604_b);
 
@@ -733,13 +1417,46 @@
 
             if (this.field_72574_e.func_70068_e(entity) < d0)
             {
+                ItemStack itemInHand = this.field_72574_e.field_71071_by.func_70448_g(); // CraftBukkit
+
                 if (p_72507_1_.field_73605_c == 0)
                 {
+                    // CraftBukkit start
+                    PlayerInteractEntityEvent event = new PlayerInteractEntityEvent((Player) this.getPlayer(), entity.getBukkitEntity());
+                    this.server.getPluginManager().callEvent(event);
+
+                    if (event.isCancelled())
+                    {
+                        return;
+                    }
+
+                    // CraftBukkit end
                     this.field_72574_e.func_70998_m(entity);
+
+                    // CraftBukkit start - update the client if the item is an infinite one
+                    if (itemInHand != null && itemInHand.field_77994_a <= -1)
+                    {
+                        this.field_72574_e.func_71120_a(this.field_72574_e.field_71070_bA);
+                    }
                 }
                 else if (p_72507_1_.field_73605_c == 1)
                 {
+                    if ((entity instanceof EntityItem) || (entity instanceof EntityXPOrb) || (entity instanceof EntityArrow))
+                    {
+                        String type = entity.getClass().getSimpleName();
+                        func_72565_c("Attacking an " + type + " is not permitted");
+                        System.out.println("Player " + field_72574_e.field_71092_bJ + " tried to attack an " + type + ", so I have disconnected them for exploiting.");
+                        return;
+                    }
+
                     this.field_72574_e.func_71059_n(entity);
+
+                    if (itemInHand != null && itemInHand.field_77994_a <= -1)
+                    {
+                        this.field_72574_e.func_71120_a(this.field_72574_e.field_71070_bA);
+                    }
+
+                    // CraftBukkit end
                 }
             }
         }
@@ -751,7 +1468,7 @@
         {
             if (this.field_72574_e.field_71136_j)
             {
-                this.field_72574_e = this.field_72573_d.func_71203_ab().func_72368_a(this.field_72574_e, 0, true);
+                this.field_72573_d.func_71203_ab().changeDimension(this.field_72574_e, 0, TeleportCause.END_PORTAL); // CraftBukkit - reroute logic through custom portal management
             }
             else if (this.field_72574_e.func_71121_q().func_72912_H().func_76093_s())
             {
@@ -789,14 +1506,100 @@
 
     public void func_72474_a(Packet101CloseWindow p_72474_1_)
     {
+        if (this.field_72574_e.field_70128_L)
+        {
+            return;    // CraftBukkit
+        }
+
+        // CraftBukkit start - INVENTORY_CLOSE hook
+        InventoryCloseEvent event = new InventoryCloseEvent(this.field_72574_e.field_71070_bA.getBukkitView());
+        server.getPluginManager().callEvent(event);
+        this.field_72574_e.field_71070_bA.transferTo(this.field_72574_e.field_71069_bz, getPlayer());
+        // CraftBukkit end
         this.field_72574_e.func_71128_l();
     }
 
     public void func_72523_a(Packet102WindowClick p_72523_1_)
     {
+        if (this.field_72574_e.field_70128_L)
+        {
+            return;    // CraftBukkit
+        }
+
         if (this.field_72574_e.field_71070_bA.field_75152_c == p_72523_1_.field_73444_a && this.field_72574_e.field_71070_bA.func_75129_b(this.field_72574_e))
         {
-            ItemStack itemstack = this.field_72574_e.field_71070_bA.func_75144_a(p_72523_1_.field_73442_b, p_72523_1_.field_73443_c, p_72523_1_.field_73439_f, this.field_72574_e);
+            // CraftBukkit start - fire InventoryClickEvent
+            if (p_72523_1_.field_73442_b == -1)
+            {
+                // Vanilla doesn't do anything with this, neither should we
+                return;
+            }
+
+            InventoryView inventory = this.field_72574_e.field_71070_bA.getBukkitView();
+            SlotType type = CraftInventoryView.getSlotType(inventory, p_72523_1_.field_73442_b);
+            InventoryClickEvent event = new InventoryClickEvent(inventory, type, p_72523_1_.field_73442_b, p_72523_1_.field_73443_c != 0, p_72523_1_.field_73439_f == 1);
+            org.bukkit.inventory.Inventory top = inventory.getTopInventory();
+
+            if (p_72523_1_.field_73442_b == 0 && top instanceof CraftingInventory)
+            {
+                org.bukkit.inventory.Recipe recipe = ((CraftingInventory) top).getRecipe();
+
+                if (recipe != null)
+                {
+                    event = new CraftItemEvent(recipe, inventory, type, p_72523_1_.field_73442_b, p_72523_1_.field_73443_c != 0, p_72523_1_.field_73439_f == 1);
+                }
+            }
+
+            server.getPluginManager().callEvent(event);
+            ItemStack itemstack = null;
+            boolean defaultBehaviour = false;
+
+            switch (event.getResult())
+            {
+                case DEFAULT:
+                    itemstack = this.field_72574_e.field_71070_bA.func_75144_a(p_72523_1_.field_73442_b, p_72523_1_.field_73443_c, p_72523_1_.field_73439_f, this.field_72574_e);
+                    defaultBehaviour = true;
+                    break;
+
+                case DENY: // Deny any change, including changes from the event
+                    break;
+
+                case ALLOW: // Allow changes unconditionally
+                    org.bukkit.inventory.ItemStack cursor = event.getCursor();
+
+                    if (cursor == null)
+                    {
+                        this.field_72574_e.field_71071_by.func_70437_b((ItemStack) null);
+                    }
+                    else
+                    {
+                        this.field_72574_e.field_71071_by.func_70437_b(CraftItemStack.asNMSCopy(cursor));
+                    }
+
+                    org.bukkit.inventory.ItemStack item = event.getCurrentItem();
+
+                    if (item != null)
+                    {
+                        itemstack = CraftItemStack.asNMSCopy(item);
+
+                        if (p_72523_1_.field_73442_b == -999)
+                        {
+                            this.field_72574_e.func_71021_b(itemstack);
+                        }
+                        else
+                        {
+                            this.field_72574_e.field_71070_bA.func_75139_a(p_72523_1_.field_73442_b).func_75215_d(itemstack);
+                        }
+                    }
+                    else if (p_72523_1_.field_73442_b != -999)
+                    {
+                        this.field_72574_e.field_71070_bA.func_75139_a(p_72523_1_.field_73442_b).func_75215_d((ItemStack) null);
+                    }
+
+                    break;
+            }
+
+            // CraftBukkit end
 
             if (ItemStack.func_77989_b(p_72523_1_.field_73441_e, itemstack))
             {
@@ -819,6 +1622,14 @@
                 }
 
                 this.field_72574_e.func_71110_a(this.field_72574_e.field_71070_bA, arraylist);
+
+                // CraftBukkit start - send a Set Slot to update the crafting result slot
+                if (type == SlotType.RESULT && itemstack != null)
+                {
+                    this.field_72574_e.field_71135_a.func_72567_b((Packet)(new Packet103SetSlot(this.field_72574_e.field_71070_bA.field_75152_c, 0, itemstack)));
+                }
+
+                // CraftBukkit end
             }
         }
     }
@@ -827,7 +1638,7 @@
     {
         if (this.field_72574_e.field_71070_bA.field_75152_c == p_72479_1_.field_73446_a && this.field_72574_e.field_71070_bA.func_75129_b(this.field_72574_e))
         {
-            this.field_72574_e.field_71070_bA.func_75140_a(this.field_72574_e, p_72479_1_.field_73445_b);
+            this.field_72574_e.field_71070_bA.func_75140_a((EntityPlayer) this.field_72574_e, p_72479_1_.field_73445_b);
             this.field_72574_e.field_71070_bA.func_75142_b();
         }
     }
@@ -839,8 +1650,63 @@
             boolean flag = p_72464_1_.field_73385_a < 0;
             ItemStack itemstack = p_72464_1_.field_73384_b;
             boolean flag1 = p_72464_1_.field_73385_a >= 1 && p_72464_1_.field_73385_a < 36 + InventoryPlayer.func_70451_h();
-            boolean flag2 = itemstack == null || itemstack.field_77993_c < Item.field_77698_e.length && itemstack.field_77993_c >= 0 && Item.field_77698_e[itemstack.field_77993_c] != null;
+            // CraftBukkit
+            boolean flag2 = itemstack == null || itemstack.field_77993_c < Item.field_77698_e.length && itemstack.field_77993_c >= 0 && Item.field_77698_e[itemstack.field_77993_c] != null && !invalidItems.contains(itemstack.field_77993_c);
             boolean flag3 = itemstack == null || itemstack.func_77960_j() >= 0 && itemstack.func_77960_j() >= 0 && itemstack.field_77994_a <= 64 && itemstack.field_77994_a > 0;
+            // CraftBukkit start - Fire INVENTORY_CLICK event
+            org.bukkit.entity.HumanEntity player = this.field_72574_e.getBukkitEntity();
+            InventoryView inventory = new CraftInventoryView(player, player.getInventory(), this.field_72574_e.field_71069_bz);
+            SlotType slot = SlotType.QUICKBAR;
+
+            if (p_72464_1_.field_73385_a == -1)
+            {
+                slot = SlotType.OUTSIDE;
+            }
+
+            InventoryClickEvent event = new InventoryClickEvent(inventory, slot, slot == SlotType.OUTSIDE ? -999 : p_72464_1_.field_73385_a, false, false);
+            server.getPluginManager().callEvent(event);
+            org.bukkit.inventory.ItemStack item = event.getCurrentItem();
+
+            switch (event.getResult())
+            {
+                case ALLOW:
+                    if (slot == SlotType.QUICKBAR)
+                    {
+                        if (item == null)
+                        {
+                            this.field_72574_e.field_71069_bz.func_75141_a(p_72464_1_.field_73385_a, (ItemStack) null);
+                        }
+                        else
+                        {
+                            this.field_72574_e.field_71069_bz.func_75141_a(p_72464_1_.field_73385_a, CraftItemStack.asNMSCopy(item));
+                        }
+                    }
+                    else if (item != null)
+                    {
+                        this.field_72574_e.func_71021_b(CraftItemStack.asNMSCopy(item));
+                    }
+
+                    return;
+
+                case DENY:
+
+                    // TODO: Will this actually work?
+                    if (p_72464_1_.field_73385_a > -1)
+                    {
+                        this.field_72574_e.field_71135_a.func_72567_b(new Packet103SetSlot(this.field_72574_e.field_71069_bz.field_75152_c, p_72464_1_.field_73385_a, CraftItemStack.asNMSCopy(item)));
+                    }
+
+                    return;
+
+                case DEFAULT:
+                    // We do the stuff below
+                    break;
+
+                default:
+                    return;
+            }
+
+            // CraftBukkit end
 
             if (flag1 && flag2 && flag3)
             {
@@ -870,6 +1736,11 @@
 
     public void func_72476_a(Packet106Transaction p_72476_1_)
     {
+        if (this.field_72574_e.field_70128_L)
+        {
+            return;    // CraftBukkit
+        }
+
         Short oshort = (Short)this.field_72586_s.func_76041_a(this.field_72574_e.field_71070_bA.field_75152_c);
 
         if (oshort != null && p_72476_1_.field_73433_b == oshort.shortValue() && this.field_72574_e.field_71070_bA.field_75152_c == p_72476_1_.field_73435_a && !this.field_72574_e.field_71070_bA.func_75129_b(this.field_72574_e))
@@ -880,6 +1751,11 @@
 
     public void func_72487_a(Packet130UpdateSign p_72487_1_)
     {
+        if (this.field_72574_e.field_70128_L)
+        {
+            return;    // CraftBukkit
+        }
+
         WorldServer worldserver = this.field_72573_d.func_71218_a(this.field_72574_e.field_71093_bK);
 
         if (worldserver.func_72899_e(p_72487_1_.field_73311_a, p_72487_1_.field_73309_b, p_72487_1_.field_73310_c))
@@ -893,6 +1769,7 @@
                 if (!tileentitysign.func_70409_a())
                 {
                     this.field_72573_d.func_71236_h("Player " + this.field_72574_e.field_71092_bJ + " just tried to change non-editable sign");
+                    this.func_72567_b(new Packet130UpdateSign(p_72487_1_.field_73311_a, p_72487_1_.field_73309_b, p_72487_1_.field_73310_c, tileentitysign.field_70412_a)); // CraftBukkit
                     return;
                 }
             }
@@ -931,7 +1808,27 @@
                 int k = p_72487_1_.field_73309_b;
                 i = p_72487_1_.field_73310_c;
                 TileEntitySign tileentitysign1 = (TileEntitySign)tileentity;
-                System.arraycopy(p_72487_1_.field_73308_d, 0, tileentitysign1.field_70412_a, 0, 4);
+                // CraftBukkit start
+                Player player = this.server.getPlayer(this.field_72574_e);
+                SignChangeEvent event = new SignChangeEvent((org.bukkit.craftbukkit.block.CraftBlock) player.getWorld().getBlockAt(j, k, i), this.server.getPlayer(this.field_72574_e), p_72487_1_.field_73308_d);
+                this.server.getPluginManager().callEvent(event);
+
+                if (!event.isCancelled())
+                {
+                    for (int l = 0; l < 4; ++l)
+                    {
+                        tileentitysign1.field_70412_a[l] = event.getLine(l);
+
+                        if (tileentitysign1.field_70412_a[l] == null)
+                        {
+                            tileentitysign1.field_70412_a[l] = "";
+                        }
+                    }
+
+                    tileentitysign1.field_70411_c = false;
+                }
+
+                // CraftBukkit end
                 tileentitysign1.func_70296_d();
                 worldserver.func_72845_h(j, k, i);
             }
@@ -954,7 +1851,23 @@
 
     public void func_72471_a(Packet202PlayerAbilities p_72471_1_)
     {
-        this.field_72574_e.field_71075_bZ.field_75100_b = p_72471_1_.func_73350_f() && this.field_72574_e.field_71075_bZ.field_75101_c;
+        // CraftBukkit start
+        if (this.field_72574_e.field_71075_bZ.field_75101_c && this.field_72574_e.field_71075_bZ.field_75100_b != p_72471_1_.func_73350_f())
+        {
+            PlayerToggleFlightEvent event = new PlayerToggleFlightEvent(this.server.getPlayer(this.field_72574_e), p_72471_1_.func_73350_f());
+            this.server.getPluginManager().callEvent(event);
+
+            if (!event.isCancelled())
+            {
+                this.field_72574_e.field_71075_bZ.field_75100_b = p_72471_1_.func_73350_f(); // Actually set the player's flying status
+            }
+            else
+            {
+                this.field_72574_e.func_71016_p(); // Tell the player their ability was reverted
+            }
+        }
+
+        // CraftBukkit end
     }
 
     public void func_72461_a(Packet203AutoComplete p_72461_1_)
@@ -962,13 +1875,13 @@
         StringBuilder stringbuilder = new StringBuilder();
         String s;
 
-        for (Iterator iterator = this.field_72573_d.func_71248_a(this.field_72574_e, p_72461_1_.func_73473_d()).iterator(); iterator.hasNext(); stringbuilder.append(s))
+        for (Iterator iterator = this.field_72573_d.func_71248_a((ICommandSender) this.field_72574_e, p_72461_1_.func_73473_d()).iterator(); iterator.hasNext(); stringbuilder.append(s))
         {
             s = (String)iterator.next();
 
             if (stringbuilder.length() > 0)
             {
-                stringbuilder.append("\u0000");
+                stringbuilder.append('\0'); // CraftBukkit - fix decompile issue
             }
         }
 
@@ -986,6 +1899,14 @@
         ItemStack itemstack;
         ItemStack itemstack1;
 
+        // CraftBukkit start - ignore empty payloads
+        if (p_72501_1_.field_73628_b <= 0)
+        {
+            return;
+        }
+
+        // CraftBukkit end
+
         if ("MC|BEdit".equals(p_72501_1_.field_73630_a))
         {
             try
@@ -1002,12 +1923,15 @@
 
                 if (itemstack != null && itemstack.field_77993_c == Item.field_77821_bF.field_77779_bT && itemstack.field_77993_c == itemstack1.field_77993_c)
                 {
-                    itemstack1.func_77983_a("pages", itemstack.func_77978_p().func_74761_m("pages"));
+                    itemstack1.func_77983_a("pages", (NBTBase) itemstack.func_77978_p().func_74761_m("pages"));
                 }
             }
             catch (Exception exception)
             {
-                exception.printStackTrace();
+                // CraftBukkit start
+                this.field_72573_d.func_98033_al().func_98235_b(this.field_72574_e.field_71092_bJ + " sent invalid MC|BEdit data", exception);
+                this.func_72565_c("Invalid book data!");
+                // CraftBukkit end
             }
         }
         else if ("MC|BSign".equals(p_72501_1_.field_73630_a))
@@ -1026,15 +1950,18 @@
 
                 if (itemstack != null && itemstack.field_77993_c == Item.field_77823_bG.field_77779_bT && itemstack1.field_77993_c == Item.field_77821_bF.field_77779_bT)
                 {
-                    itemstack1.func_77983_a("author", new NBTTagString("author", this.field_72574_e.field_71092_bJ));
-                    itemstack1.func_77983_a("title", new NBTTagString("title", itemstack.func_77978_p().func_74779_i("title")));
-                    itemstack1.func_77983_a("pages", itemstack.func_77978_p().func_74761_m("pages"));
+                    itemstack1.func_77983_a("author", (NBTBase)(new NBTTagString("author", this.field_72574_e.field_71092_bJ)));
+                    itemstack1.func_77983_a("title", (NBTBase)(new NBTTagString("title", itemstack.func_77978_p().func_74779_i("title"))));
+                    itemstack1.func_77983_a("pages", (NBTBase) itemstack.func_77978_p().func_74761_m("pages"));
                     itemstack1.field_77993_c = Item.field_77823_bG.field_77779_bT;
                 }
             }
             catch (Exception exception1)
             {
-                exception1.printStackTrace();
+                // CraftBukkit start
+                this.field_72573_d.func_98033_al().func_98235_b(this.field_72574_e.field_71092_bJ + " sent invalid MC|BSign data", exception1);
+                this.func_72565_c("Invalid book data!");
+                // CraftBukkit end
             }
         }
         else
@@ -1056,7 +1983,10 @@
                 }
                 catch (Exception exception2)
                 {
-                    exception2.printStackTrace();
+                    // CraftBukkit start
+                    this.field_72573_d.func_98033_al().func_98235_b(this.field_72574_e.field_71092_bJ + " sent invalid MC|TrSel data", exception2);
+                    this.func_72565_c("Invalid trade data!");
+                    // CraftBukkit end
                 }
             }
             else
@@ -1089,7 +2019,10 @@
                         }
                         catch (Exception exception3)
                         {
-                            exception3.printStackTrace();
+                            // CraftBukkit start
+                            this.field_72573_d.func_98033_al().func_98235_b(this.field_72574_e.field_71092_bJ + " sent invalid MC|AdvCdm data", exception3);
+                            this.func_72565_c("Invalid CommandBlock data!");
+                            // CraftBukkit end
                         }
                     }
                     else
@@ -1120,7 +2053,10 @@
                         }
                         catch (Exception exception4)
                         {
-                            exception4.printStackTrace();
+                            // CraftBukkit start
+                            this.field_72573_d.func_98033_al().func_98235_b(this.field_72574_e.field_71092_bJ + " sent invalid MC|Beacon data", exception4);
+                            this.func_72565_c("Invalid beacon data!");
+                            // CraftBukkit end
                         }
                     }
                 }
@@ -1142,6 +2078,45 @@
                         containerrepair.func_82850_a("");
                     }
                 }
+                // CraftBukkit start
+                else if (p_72501_1_.field_73630_a.equals("REGISTER"))
+                {
+                    try
+                    {
+                        String channels = new String(p_72501_1_.field_73629_c, "UTF8");
+
+                        for (String channel : channels.split("\0"))
+                        {
+                            getPlayer().addChannel(channel);
+                        }
+                    }
+                    catch (UnsupportedEncodingException ex)
+                    {
+                        throw new AssertionError(ex);
+                    }
+                }
+                else if (p_72501_1_.field_73630_a.equals("UNREGISTER"))
+                {
+                    try
+                    {
+                        String channels = new String(p_72501_1_.field_73629_c, "UTF8");
+
+                        for (String channel : channels.split("\0"))
+                        {
+                            getPlayer().removeChannel(channel);
+                        }
+                    }
+                    catch (UnsupportedEncodingException ex)
+                    {
+                        throw new AssertionError(ex);
+                    }
+                }
+                else
+                {
+                    server.getMessenger().dispatchIncomingMessage(field_72574_e.getBukkitEntity(), p_72501_1_.field_73630_a, p_72501_1_.field_73629_c);
+                }
+
+                // CraftBukkit end
             }
         }
     }
