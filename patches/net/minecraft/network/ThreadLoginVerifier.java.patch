--- ../net/minecraft/network/ThreadLoginVerifier.java
+++ ../net/minecraft/network/ThreadLoginVerifier.java
@@ -7,13 +7,25 @@
 import java.net.URLEncoder;
 import net.minecraft.util.CryptManager;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.util.Waitable;
+import org.bukkit.event.player.AsyncPlayerPreLoginEvent;
+import org.bukkit.event.player.PlayerPreLoginEvent;
+// CraftBukkit end
+
 class ThreadLoginVerifier extends Thread
 {
     final NetLoginHandler field_72590_a;
 
-    ThreadLoginVerifier(NetLoginHandler p_i3399_1_)
+    // CraftBukkit start
+    CraftServer server;
+
+    ThreadLoginVerifier(NetLoginHandler pendingconnection, CraftServer server)
     {
-        this.field_72590_a = p_i3399_1_;
+        this.server = server;
+        // CraftBukkit end
+        this.field_72590_a = pendingconnection;
     }
 
     public void run()
@@ -32,12 +44,63 @@
                 return;
             }
 
+            // CraftBukkit start
+            if (this.field_72590_a.getSocket() == null)
+            {
+                return;
+            }
+
+            AsyncPlayerPreLoginEvent asyncEvent = new AsyncPlayerPreLoginEvent(NetLoginHandler.func_72533_d(this.field_72590_a), this.field_72590_a.getSocket().getInetAddress());
+            this.server.getPluginManager().callEvent(asyncEvent);
+
+            if (PlayerPreLoginEvent.getHandlerList().getRegisteredListeners().length != 0)
+            {
+                final PlayerPreLoginEvent event = new PlayerPreLoginEvent(NetLoginHandler.func_72533_d(this.field_72590_a), this.field_72590_a.getSocket().getInetAddress());
+
+                if (asyncEvent.getResult() != PlayerPreLoginEvent.Result.ALLOWED)
+                {
+                    event.disallow(asyncEvent.getResult(), asyncEvent.getKickMessage());
+                }
+
+                Waitable<PlayerPreLoginEvent.Result> waitable = new Waitable<PlayerPreLoginEvent.Result>()
+                {
+                    @Override
+                    protected PlayerPreLoginEvent.Result evaluate()
+                    {
+                        ThreadLoginVerifier.this.server.getPluginManager().callEvent(event);
+                        return event.getResult();
+                    }
+                };
+                NetLoginHandler.func_72530_b(this.field_72590_a).processQueue.add(waitable);
+
+                if (waitable.get() != PlayerPreLoginEvent.Result.ALLOWED)
+                {
+                    this.field_72590_a.func_72527_a(event.getKickMessage());
+                    return;
+                }
+            }
+            else
+            {
+                if (asyncEvent.getLoginResult() != AsyncPlayerPreLoginEvent.Result.ALLOWED)
+                {
+                    this.field_72590_a.func_72527_a(asyncEvent.getKickMessage());
+                    return;
+                }
+            }
+
+            // CraftBukkit end
             NetLoginHandler.func_72531_a(this.field_72590_a, true);
+            // CraftBukkit start
+        }
+        catch (java.io.IOException exception)
+        {
+            this.field_72590_a.func_72527_a("Failed to verify username, session authentication server unavailable!");
         }
         catch (Exception exception)
         {
-            this.field_72590_a.func_72527_a("Failed to verify username! [internal error " + exception + "]");
-            exception.printStackTrace();
+            this.field_72590_a.func_72527_a("Failed to verify username!");
+            server.getLogger().log(java.util.logging.Level.WARNING, "Exception verifying " + NetLoginHandler.func_72533_d(this.field_72590_a), exception);
+            // CraftBukkit end
         }
     }
 }
