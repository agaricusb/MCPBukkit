--- ../net/minecraft/util/AABBPool.java
+++ ../net/minecraft/util/AABBPool.java
@@ -20,6 +20,12 @@
 
     public AxisAlignedBB func_72299_a(double p_72299_1_, double p_72299_3_, double p_72299_5_, double p_72299_7_, double p_72299_9_, double p_72299_11_)
     {
+        // CraftBukkit - don't pool objects indefinitely if thread doesn't adhere to contract
+        if (this.field_72301_f == 0)
+        {
+            return new AxisAlignedBB(p_72299_1_, p_72299_3_, p_72299_5_, p_72299_7_, p_72299_9_, p_72299_11_);
+        }
+
         AxisAlignedBB axisalignedbb;
 
         if (this.field_72302_d >= this.field_72305_c.size())
@@ -44,19 +50,26 @@
             this.field_72303_e = this.field_72302_d;
         }
 
-        if (this.field_72301_f++ == this.field_72306_a)
+        // CraftBukkit start - intelligent cache
+        if ((this.field_72301_f++ & 0xff) == 0)
         {
-            int i = Math.max(this.field_72303_e, this.field_72305_c.size() - this.field_72304_b);
+            int newSize = this.field_72305_c.size() - (this.field_72305_c.size() >> 3);
 
-            while (this.field_72305_c.size() > i)
+            // newSize will be 87.5%, but if we were not in that range, we clear some of the cache
+            if (newSize > this.field_72303_e)
             {
-                this.field_72305_c.remove(i);
+                // Work down from size() to prevent insane array copies
+                for (int i = this.field_72305_c.size() - 1; i > newSize; i--)
+                {
+                    this.field_72305_c.remove(i);
+                }
             }
 
             this.field_72303_e = 0;
-            this.field_72301_f = 0;
+            // this.resizeTime = 0; // We do not reset to zero; it doubles for a flag
         }
 
+        // CraftBukkit end
         this.field_72302_d = 0;
     }
 
