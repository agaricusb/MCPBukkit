--- ../net/minecraft/server/management/PlayerManager.java
+++ ../net/minecraft/server/management/PlayerManager.java
@@ -8,14 +8,22 @@
 import net.minecraft.world.WorldProvider;
 import net.minecraft.world.WorldServer;
 
+// CraftBukkit start
+import java.util.Collections;
+import java.util.Queue;
+import java.util.Iterator;
+import java.util.LinkedList;
+// CraftBukkit end
+
 public class PlayerManager
 {
     private final WorldServer field_72701_a;
     private final List field_72699_b = new ArrayList();
     private final LongHashMap field_72700_c = new LongHashMap();
-    private final List field_72697_d = new ArrayList();
+    private final Queue field_72697_d = new java.util.concurrent.ConcurrentLinkedQueue(); // CraftBukkit ArrayList -> ConcurrentLinkedQueue
     private final int field_72698_e;
     private final int[][] field_72696_f = new int[][] {{1, 0}, {0, 1}, { -1, 0}, {0, -1}};
+    private boolean wasNotEmpty; // CraftBukkit
 
     public PlayerManager(WorldServer p_i3392_1_, int p_i3392_2_)
     {
@@ -41,22 +49,42 @@
 
     public void func_72693_b()
     {
-        for (int i = 0; i < this.field_72697_d.size(); ++i)
-        {
-            ((PlayerInstance)this.field_72697_d.get(i)).func_73254_a();
-        }
-
-        this.field_72697_d.clear();
-
+        // CraftBukkit start - use iterator
+        Iterator iterator = this.field_72697_d.iterator();
+
+        while (iterator.hasNext())
+        {
+            PlayerInstance playerinstance = (PlayerInstance) iterator.next();
+            playerinstance.func_73254_a();
+            iterator.remove();
+        }
+
+        // CraftBukkit end
+
+        // this.d.clear(); // CraftBukkit - removals are already covered
         if (this.field_72699_b.isEmpty())
         {
+            if (!wasNotEmpty)
+            {
+                return;    // CraftBukkit - only do unload when we go from non-empty to empty
+            }
+
             WorldProvider worldprovider = this.field_72701_a.field_73011_w;
 
             if (!worldprovider.func_76567_e())
             {
                 this.field_72701_a.field_73059_b.func_73240_a();
             }
-        }
+
+            // CraftBukkit start
+            wasNotEmpty = false;
+        }
+        else
+        {
+            wasNotEmpty = true;
+        }
+
+        // CraftBukkit end
     }
 
     private PlayerInstance func_72690_a(int p_72690_1_, int p_72690_2_, boolean p_72690_3_)
@@ -72,6 +100,19 @@
 
         return playerinstance;
     }
+    // CraftBukkit start
+    public final boolean isChunkInUse(int x, int z)
+    {
+        PlayerInstance pi = func_72690_a(x, z, false);
+
+        if (pi != null)
+        {
+            return (PlayerInstance.func_73258_b(pi).size() > 0);
+        }
+
+        return false;
+    }
+    // CraftBukkit end
 
     public void func_72687_a(int p_72687_1_, int p_72687_2_, int p_72687_3_)
     {
@@ -91,15 +132,25 @@
         int j = (int)p_72683_1_.field_70161_v >> 4;
         p_72683_1_.field_71131_d = p_72683_1_.field_70165_t;
         p_72683_1_.field_71132_e = p_72683_1_.field_70161_v;
+        // CraftBukkit start - load nearby chunks first
+        List<ChunkCoordIntPair> chunkList = new LinkedList<ChunkCoordIntPair>();
 
         for (int k = i - this.field_72698_e; k <= i + this.field_72698_e; ++k)
         {
             for (int l = j - this.field_72698_e; l <= j + this.field_72698_e; ++l)
             {
-                this.func_72690_a(k, l, true).func_73255_a(p_72683_1_);
-            }
-        }
-
+                chunkList.add(new ChunkCoordIntPair(k, l));
+            }
+        }
+
+        Collections.sort(chunkList, new ChunkCoordComparator(p_72683_1_));
+
+        for (ChunkCoordIntPair pair : chunkList)
+        {
+            this.func_72690_a(pair.field_77276_a, pair.field_77275_b, true).func_73255_a(p_72683_1_);
+        }
+
+        // CraftBukkit end
         this.field_72699_b.add(p_72683_1_);
         this.func_72691_b(p_72683_1_);
     }
@@ -201,6 +252,7 @@
             int i1 = this.field_72698_e;
             int j1 = i - k;
             int k1 = j - l;
+            List<ChunkCoordIntPair> chunksToLoad = new LinkedList<ChunkCoordIntPair>(); // CraftBukkit
 
             if (j1 != 0 || k1 != 0)
             {
@@ -210,7 +262,7 @@
                     {
                         if (!this.func_72684_a(l1, i2, k, l, i1))
                         {
-                            this.func_72690_a(l1, i2, true).func_73255_a(p_72685_1_);
+                            chunksToLoad.add(new ChunkCoordIntPair(l1, i2)); // CraftBukkit
                         }
 
                         if (!this.func_72684_a(l1 - j1, i2 - k1, i, j, i1))
@@ -228,6 +280,20 @@
                 this.func_72691_b(p_72685_1_);
                 p_72685_1_.field_71131_d = p_72685_1_.field_70165_t;
                 p_72685_1_.field_71132_e = p_72685_1_.field_70161_v;
+                // CraftBukkit start - send nearest chunks first
+                Collections.sort(chunksToLoad, new ChunkCoordComparator(p_72685_1_));
+
+                for (ChunkCoordIntPair pair : chunksToLoad)
+                {
+                    this.func_72690_a(pair.field_77276_a, pair.field_77275_b, true).func_73255_a(p_72685_1_);
+                }
+
+                if (i1 > 1 || i1 < -1 || j1 > 1 || j1 < -1)
+                {
+                    Collections.sort(p_72685_1_.field_71129_f, new ChunkCoordComparator(p_72685_1_));
+                }
+
+                // CraftBukkit end
             }
         }
     }
@@ -253,8 +319,65 @@
         return p_72689_0_.field_72700_c;
     }
 
-    static List func_72682_c(PlayerManager p_72682_0_)
-    {
-        return p_72682_0_.field_72697_d;
-    }
+    static Queue c(PlayerManager playermanager)   // CraftBukkit List -> Queue
+    {
+        return playermanager.field_72697_d;
+    }
+
+    // CraftBukkit start - sorter to load nearby chunks first
+    private static class ChunkCoordComparator implements java.util.Comparator<ChunkCoordIntPair>
+    {
+        private int x;
+        private int z;
+
+        public ChunkCoordComparator(EntityPlayerMP entityplayer)
+        {
+            x = (int) entityplayer.field_70165_t >> 4;
+            z = (int) entityplayer.field_70161_v >> 4;
+        }
+
+        public int compare(ChunkCoordIntPair a, ChunkCoordIntPair b)
+        {
+            if (a.equals(b))
+            {
+                return 0;
+            }
+
+            // Subtract current position to set center point
+            int ax = a.field_77276_a - this.x;
+            int az = a.field_77275_b - this.z;
+            int bx = b.field_77276_a - this.x;
+            int bz = b.field_77275_b - this.z;
+            int result = ((ax - bx) * (ax + bx)) + ((az - bz) * (az + bz));
+
+            if (result != 0)
+            {
+                return result;
+            }
+
+            if (ax < 0)
+            {
+                if (bx < 0)
+                {
+                    return bz - az;
+                }
+                else
+                {
+                    return -1;
+                }
+            }
+            else
+            {
+                if (bx < 0)
+                {
+                    return 1;
+                }
+                else
+                {
+                    return az - bz;
+                }
+            }
+        }
+    }
+    // CraftBukkit end
 }
